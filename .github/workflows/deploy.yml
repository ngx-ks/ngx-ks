name: Release
on:
  push:
    branches:
      - master
      - beta
      - next

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:

  dependencies:
    name: Checkout & cache dependencies 🛎
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: node_modules # !WARN does not work if running multiple node versions, instead use https://github.com/actions/cache/blob/master/examples.md#node---yarn
          key: ${{ runner.os }}-yarn-${{ github.run_id }}

      - name: Yarn install 💾
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

  test:
    name: Test all 🧪
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
            # - run: git fetch --no-tags --prune origin master

      - name: Set Node.js 12.x 🔐
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Restore dependencies from cache 🔽☁️
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ github.run_id }}
      - name: Run tests 🧪
        run: yarn test

  lint:
    name: Lint all 🧹
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
            # - run: git fetch --no-tags --prune origin master

      - name: Set Node.js 12.x 🔐
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Restore dependencies from cache 🔽☁️
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ github.run_id }}

      - name: Run code linter ⌨🧹
        run: yarn lint:nx:all

      - name: Run commit message linter 💬🧹
        run: yarn lint:last-commit-message

  release:
    name: Build and release affected 🏗
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: git fetch --no-tags --prune origin master

      - name: Set Node.js 12.x 🔐
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Restore dependencies from cache 🔽☁️
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ github.run_id }}

      - name: yarn build affected 🔧
        run: yarn affected:build

      - name: Release all the things! ☁️🚀
        run: yarn affected:release

